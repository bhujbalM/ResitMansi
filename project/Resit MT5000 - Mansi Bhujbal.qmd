---
title: "ResitMT5000, Quarto Assignment"
Subtitle : "COVID-19 Data Analysis for Ireland and 9 Other Countries"
author: "Mansi Bhujbal"
Id: "23263182"
date: "2024-7-08"
format: html
editor: visual
---

``` r
{r setup, include=FALSE}
'echo: false'
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(rnaturalearth)
library(readr)
library(viridis)
library(lubridate)
library(sf)

# Install and load the ggplot2 package if not already installed
if (!require(ggplot2)) {
  install.packages("ggplot2")
  library(ggplot2)
}
```

**Introduction**

The COVID-19 pandemic has impacted countries across the globe differently, with varying levels of cases and deaths. This analysis aims to explore and compare COVID data of Ireland and nine other countries: United Kingdom, France, Germany, Italy, Spain, Sweden, United States, Canada, and Australia. We will visualize the total cases per million, daily new cases and deaths, and compare cases and deaths across these countries to understand the pandemics effect.

## Data Preparation

### Simulate and Read Data

To begin, we need to load the necessary libraries and prepare our dataset. We simulate some data of the selected countries and read our primary dataset from a CSV file.

``` r
#| echo: false
# Simulate data for each country (example values)
set.seed(123)  # Setting seed for reproducibility

# List of Countries
countries <- c('Ireland', 'United Kingdom', 'France', 'Germany', 'Italy', 'Spain', 'Sweden', 'United States', 'Canada', 'Australia')

options(scipen = 999)
# Read the CSV file
country_data <- read.csv('country_data.csv')

# Convert date column to Date type
country_data$date <- as.Date(country_data$date)
```

### Structure and Summary

We first inspect the structure of our data to ensure it is loaded correctly and understand its contents. The summary statistics provide a quick overview of the key metrics, such as total cases and deaths, and help identify any anomalies or missing data.

``` r
{r}
#| echo: false
# Display structure of the data
str(country_data)

# Display the first few rows
head(country_data)

# Get unique countries in the dataset
unique_countries <- unique(country_data$location)
print(paste('Unique countries in the dataset:', toString(unique_countries)))

# Basic summary of the data
summary(country_data)
```

## Visualizations

### World Map of Total Cases per Million

Our first visualization is a world map that highlights the total cases per million for our selected countries. This map provides a global perspective, allowing us to see the relative severity of COVID-19 cases in different regions. By using a logarithmic scale, we can better visualize the wide range of case numbers across countries.

``` r
{r}
#| echo: false
# Create a color palette
color_palette <- viridis(5)

# World Map of Total Cases per Million
world <- ne_countries(scale = 'medium', returnclass = 'sf')

latest_data <- country_data %>%
  group_by(location) %>%
  filter(date == max(date)) %>%
  select(location, total_cases_per_million)

world_data <- left_join(world, latest_data, by = c('name' = 'location'))

map <- ggplot(data = world_data) +
  geom_sf(aes(fill = total_cases_per_million)) +
  scale_fill_viridis(option = 'plasma', trans = 'log', 
                     name = 'Total Cases per Million (log scale)', 
                     na.value = 'grey') +
  theme_minimal() +
  labs(title = 'COVID-19 Total Cases per Million by Ireland and 9 other Countries',
       caption = 'Data source: country_data.csv') +
  theme(legend.position = 'right')

# Print the map
print(map)
ggsave('world_map_covid_cases.png', map, width = 12, height = 8)
print(map)
geom_polygon()
```
